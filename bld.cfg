/*
 * Copyright (c) 2013, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== bld.cfg ========
 */

/* ================ General configuration ================ */
var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Error = xdc.useModule('xdc.runtime.Error');
var Log = xdc.useModule('xdc.runtime.Log');
var Main = xdc.useModule('xdc.runtime.Main');
var Memory = xdc.useModule('xdc.runtime.Memory');
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
var Timestamp = xdc.useModule('xdc.runtime.Timestamp');

/* ================ System configuration ================ */
var SysMin = xdc.useModule('xdc.runtime.SysMin');
SysMin.bufSize = 0x400;
SysMin.outputFxn = '&outputToUART';
System.SupportProxy = SysMin;

xdc.loadPackage('ti.uia.sysbios').profile = "debug";

/* ================ Logging configuration ================ */
var LoggerIdle = xdc.useModule('ti.uia.sysbios.LoggerIdle');
LoggerIdle.bufferSize = 256;
LoggerIdle.transportFxn = "&EventLogger_processEvent";
LoggerIdle.transportType = LoggerIdle.TransportType_UART;
LoggerIdle.isTimestampEnabled = true;
LoggerIdle.writeWhenFull = false;

Defaults.common$.logger = LoggerIdle.create();
Defaults.common$.diags_ASSERT = Diags.ALWAYS_ON;
Defaults.common$.diags_INTERNAL = Diags.ALWAYS_ON;

/* ================ Driver configuration ================ */
var TIRTOS = xdc.useModule('ti.tirtos.TIRTOS');

var GPIO = xdc.useModule('ti.drivers.GPIO');
var UART = xdc.useModule('ti.drivers.UART');
UART.libType = UART.LibType_NonInstrumented;

/* Turn on USER1 logs in Main module */
Main.common$.diags_USER1 = Diags.RUNTIME_ON;
Main.common$.diags_INFO = Diags.ALWAYS_ON;

Clock.common$.diags_USER1 = Diags.ALWAYS_OFF;
Clock.common$.diags_USER2 = Diags.ALWAYS_OFF;

//Task.common$.diags_USER1 = Diags.RUNTIME_ON;
//Task.common$.diags_USER2 = Diags.RUNTIME_ON;
//Semaphore.common$.diags_USER1 = Diags.RUNTIME_ON;
//Semaphore.common$.diags_USER2 = Diags.RUNTIME_ON;

BIOS.libType = BIOS.LibType_Debug;

var M3Hwi = xdc.useModule('ti.sysbios.family.arm.m3.Hwi');
M3Hwi.enableException = true;
M3Hwi.nvicCCR.UNALIGN_TRP = 1;
M3Hwi.nvicCCR.DIV_0_TRP = 1;

M3Hwi.excHookFunc = '&onException';

var LM4Timer = xdc.useModule('ti.sysbios.family.arm.lm4.Timer');

/* For simplicity, to use one less timer, let timestamp module reuse Clock's */
/* Note: this probably shouldn't be done for apps with interrupts not triggered
   by Clock */
var TimestampProvider = xdc.useModule('ti.sysbios.family.arm.lm4.TimestampProvider');
TimestampProvider.useClockTimer = true;
